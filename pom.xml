<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>demo.webapp</groupId>
  <artifactId>DemoWebApp</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>DemoWebApp Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>4.1.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>4.1.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>4.1.1.RELEASE</version>
        </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>DemoWebApp</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <!-- test javascript -->
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <version>1.3.1.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>

                    <!--
                    where is your javascript - default is src/main/javascript
                    -->
                    <jsSrcDir>${project.basedir}/src/main/webapp/static</jsSrcDir>

                    <!--
                    the type of browser HtmlUnit emulates when your specs run during the build possible other value: INTERNET_EXPLORER_6, INTERNET_EXPLORER_7, INTERNET_EXPLORER_8 default: FIREFOX_3 see HtmlUnit documentation to see if any have been added since
                    -->
                    <browserVersion>CHROME</browserVersion>

                    <!--
                    a list of to scripts that need to be loaded before any others.
                    Mostly useful to load remote scripts
                    -->
                    <preloadSources>
                        <source>https://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js</source>
                        <source>https://ajax.googleapis.com/ajax/libs/angularjs/1.0.2/angular.min.js</source>
                        <source>https://code.angularjs.org/1.0.2/angular-mocks.js</source>
                    </preloadSources>

                    <!--
                    when spec execution exceeds the timeout (in seconds), the build fails
                    -->
                    <timeout>300</timeout>

                    <!--
                    the name of the generated JUnit XML report
                    the plugin generates XML of the same brand JUnit does; this is handy for when your CI server is capable of aggregating these XML files (like Jenkins freestyle projects)
                    -->
                    <junitXmlReportFileName>TEST-jasmine.xml</junitXmlReportFileName>

                    <!--
                    True to increase HtmlUnit output and attempt reporting on specs even if a timeout occurred.
                    -->
                    <debug>false</debug>

                    <sourceEncoding>utf-8</sourceEncoding>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <configuration>
                    <url>http://127.0.0.1:8080/manager</url>
                    <server>tomcatServer</server>
                    <path>/demoWebApp</path>
                </configuration>
            </plugin>
        </plugins>
  </build>
</project>

