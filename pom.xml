<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>demo.webapp</groupId>
  <artifactId>DemoWebApp</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>DemoWebApp Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>4.1.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>4.1.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>4.1.1.RELEASE</version>
        </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>DemoWebApp</finalName>
        <plugins>

<!--
        <plugin>
            <groupId>com.github.klieber</groupId>
            <artifactId>phantomjs-maven-plugin</artifactId>
            <version>0.2.1</version>
            <executions>
                <execution>
                    <goals>
                        <goal>install</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <version>1.9.2</version>
            </configuration>
        </plugin>
-->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>enforce-os</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.0.5]</version>
                </requireMavenVersion>
                <!-- syntax: https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html -->
                <requireJavaVersion>
                  <version>[1.7,1.8)</version>
                </requireJavaVersion>
                <!--
                <requireOS>
                  <name>Windows XP</name>
                  <family>windows</family>
                  <arch>x86</arch>
                  <version>5.1.2600</version>
                </requireOS>
                -->
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <!-- this compiles to a target jre -->
                    <source>1.7</source>
                    <target>1.7</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <!-- test javascript -->
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <!--<version>1.3.1.5</version>-->
                <!-- to work with firefox 38.0 -->
                <version>1.3.1.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
        <!--
      <dependencies>
        <dependency>
          <groupId>net.sourceforge.htmlunit</groupId>
          <artifactId>htmlunit</artifactId>
          <version>2.15</version>
        </dependency>
      </dependencies>
        -->
                <configuration>

                    <!--
                    where is your javascript - default is src/main/javascript
                    -->
                    <jsSrcDir>${project.basedir}/src/main/webapp/static</jsSrcDir>

                    <!--
                    the type of browser HtmlUnit emulates when your specs run during the build possible other value: INTERNET_EXPLORER_6, INTERNET_EXPLORER_7, INTERNET_EXPLORER_8 is the default. For FIREFOX_3 ... see HtmlUnit documentation to see if any have been added since http://htmlunit.sourceforge.net/apidocs/com/gargoylesoftware/htmlunit/BrowserVersion.html
                    -->
                    <!--<browserVersion>CHROME</browserVersion>-->

                    <!--
                    a list of to scripts that need to be loaded before any others.
                    Mostly useful to load remote scripts
                    -->

                        <!--<source>https://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js</source>-->
                        <!--<source>https://ajax.googleapis.com/ajax/libs/angularjs/1.3.6/angular.min.js</source>-->
                        <!--<source>https://ajax.googleapis.com/ajax/libs/angularjs/1.3.6/angular-animate.min.js</source>-->
                        <!--<source>https://ajax.googleapis.com/ajax/libs/angularjs/1.3.6/angular-aria.min.js</source>-->
                        <!--<source>https://ajax.googleapis.com/ajax/libs/angular_material/0.7.1/angular-material.min.js</source>-->
                        <!--<source>https://code.angularjs.org/1.0.2/angular-mocks.js</source>-->
                    <preloadSources>
                        <!-- to use with bellow sourceIncludes to archieve correct loading scripts order in file target/jasmine/SpecRunner.html -->
                        <!--
                        <source>https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.js</source>
                        -->
                        <!--
                        <source>https://ajax.googleapis.com/ajax/libs/angularjs/1.3.6/angular.js</source>
                        -->
                        <!--
                        <source>https://code.angularjs.org/1.3.6/angular-mocks.js</source>
                        -->
                        <!--
                        <source>https://ajax.googleapis.com/ajax/libs/angularjs/1.3.6/angular-animate.js</source>
                        -->
                        <!--
                        <source>https://ajax.googleapis.com/ajax/libs/angularjs/1.3.6/angular-aria.js</source>
                        -->
                        <!--
                        <source>https://ajax.googleapis.com/ajax/libs/angular_material/0.8.2/angular-material.js</source>
                        -->
                    </preloadSources>

  <!-- to use with above preloadSources to archieve correct loading scripts order in file target/jasmine/SpecRunner.html -->
  <sourceIncludes>
    <!--<include>**/jquery-2.1.3.js</include>-->
    <include>**/angular-1.3.6.js</include>
    <include>**/angular-mocks-1.3.6.js</include>
    <include>**/angular-animate-1.3.6.js</include>
    <include>**/angular-aria-1.3.6.js</include>
    <include>**/angular_material-0.8.2.js</include>
    <include>**/*.js</include>
    <include>**/*.coffee</include>
  </sourceIncludes>

                <!--

                http://searls.github.io/jasmine-maven-plugin/test-mojo.html
                default is htmlunit
                -->

                <!--<webDriverClassName>org.openqa.selenium.ie.InternetExplorerDriver</webDriverClassName>-->
                <!-- conclusion:
                    found that the best way to emulate a browser to test javascript
                    is to use the browser itself. Solution: use /usr/bin/firefox
                    instead of htmlunit drivers or phantomjs
                    the bellow expects mvn clean test -Dwebdriver.firefox.bin='/usr/bin/firefox'
                -->
                <webDriverClassName>org.openqa.selenium.firefox.FirefoxDriver</webDriverClassName>

                <!--
                <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
                <webDriverCapabilities>
                    <capability>
                        <name>phantomjs.binary.path</name>
                        <value>${phantomjs.binary}</value>
                        <value>src/test/resources/phantomjs-1.9.2-linux-i686/bin/phantomjs</value>
                    </capability>
                </webDriverCapabilities>
                -->

                <haltOnFailure>true</haltOnFailure>

                    <!--
                    when spec execution exceeds the timeout (in seconds), the build fails
                    -->
                    <timeout>300</timeout>

                    <!--
                    the name of the generated JUnit XML report
                    the plugin generates XML of the same brand JUnit does; this is handy for when your CI server is capable of aggregating these XML files (like Jenkins freestyle projects)
                    -->
                    <junitXmlReportFileName>TEST-jasmine.xml</junitXmlReportFileName>

                    <!--
                    True to increase HtmlUnit output and attempt reporting on specs even if a timeout occurred.
                    -->
                    <debug>true</debug>

                    <sourceEncoding>utf-8</sourceEncoding>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                    <url>http://127.0.0.1:8080/manager/text</url>
                    <server>tomcatServer</server>
                    <path>/demoWebApp</path>
                </configuration>
            </plugin>
        </plugins>
  </build>
</project>

